{"ast":null,"code":"var _jsxFileName = \"/Users/jackierauhut/Documents/recipe_share/src/components/MainPage/MainPage.js\";\nimport React from \"react\";\nimport { Modal, Spinner } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport AddRecipeModal from \"../AddRecipeModal/AddRecipeModal\";\nimport RecipeDisplay from \"../RecipeDisplay/RecipeDisplay\";\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        isCreateRecipeOpen: !this.state.isCreateRecipeOpen\n      });\n    };\n\n    this.navToRecipe = id => {\n      this.props.history.push(`/recipe/${id}`);\n    };\n\n    this.state = {\n      recipes: [],\n      isCreateRecipeOpen: false,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/recipes\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Something went wrong when trying to get recipes\");\n      }\n    }).then(recipes => {\n      this.setState({\n        recipes: recipes.data\n      });\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    const {\n      recipes,\n      isCreateRecipeOpen\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Recipe Share\"), this.state.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      className: \"spinner\",\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }) : this.props.isSignedIn ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-secondary\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Add new recipe\") : /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Create an account to add a new recipe\")), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: isCreateRecipeOpen,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddRecipeModal, {\n      toggle: this.toggle,\n      navToRecipe: this.navToRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(RecipeDisplay, {\n      recipes: recipes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/jackierauhut/Documents/recipe_share/src/components/MainPage/MainPage.js"],"names":["React","Modal","Spinner","Link","AddRecipeModal","RecipeDisplay","MainPage","Component","constructor","props","toggle","setState","isCreateRecipeOpen","state","navToRecipe","id","history","push","recipes","isLoading","componentDidMount","fetch","method","headers","then","response","ok","json","Error","data","catch","error","console","log","render","isSignedIn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Modal, Spinner } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport AddRecipeModal from \"../AddRecipeModal/AddRecipeModal\";\nimport RecipeDisplay from \"../RecipeDisplay/RecipeDisplay\";\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [],\n      isCreateRecipeOpen: false,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/recipes\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong when trying to get recipes\");\n        }\n      })\n      .then((recipes) => {\n        this.setState({ recipes: recipes.data });\n        this.setState({ isLoading: false });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  toggle = () => {\n    this.setState({ isCreateRecipeOpen: !this.state.isCreateRecipeOpen });\n  };\n\n  navToRecipe = (id) => {\n    this.props.history.push(`/recipe/${id}`);\n  };\n\n  render() {\n    const { recipes, isCreateRecipeOpen } = this.state;\n    return (\n      <div>\n        <h1>Recipe Share</h1>\n        {this.state.isLoading ? (\n          <Spinner className=\"spinner\" color=\"danger\" />\n        ) : this.props.isSignedIn ? (\n          <button className=\"button-secondary\" onClick={this.toggle}>\n            Add new recipe\n          </button>\n        ) : (\n          <Link to={\"/register\"}>\n            <div>Create an account to add a new recipe</div>\n          </Link>\n        )}\n        <Modal isOpen={isCreateRecipeOpen} toggle={this.toggle}>\n          <AddRecipeModal\n            toggle={this.toggle}\n            navToRecipe={this.navToRecipe}\n          ></AddRecipeModal>\n        </Modal>\n        <RecipeDisplay recipes={recipes} />\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}