{"ast":null,"code":"var _jsxFileName = \"/Users/jackierauhut/Documents/recipe-share/src/App.js\";\nimport React, { Component } from \"react\";\nimport MainPage from \"./components/MainPage/MainPage\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport RecipePage from \"./components/RecipePage/RecipePage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport ResultsPage from \"./components/ResultsPage/ResultsPage\";\nconst initialState = {\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    recipes: \"\"\n  },\n  searchEntry: \"\",\n  filteredRecipes: []\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data._id,\n          name: data.name,\n          email: data.email,\n          recipes: data.recipes\n        }\n      });\n    };\n\n    this.onRecipeSearch = search => {\n      this.setState({\n        searchEntry: search\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState({\n          isSignedIn: false\n        });\n        this.setState({\n          initialState\n        });\n      } else if (route === \"signingIn\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n    };\n\n    this.toggleModal = () => {\n      this.setState(prevState => ({ ...prevState,\n        isProfileOpen: !prevState.isProfileOpen\n      }));\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem(\"token\");\n\n    if (token) {\n      fetch(\"http://localhost:3000/signin\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.user) {\n          fetch(\"http://localhost:3000/profile\", {\n            method: \"get\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: token\n            }\n          }).then(response => response.json()).then(user => {\n            if (user && user.email) {\n              this.loadUser(user);\n              this.onRouteChange(\"mainPage\");\n              this.setState({\n                isSignedIn: true\n              });\n            }\n          });\n        }\n      }).catch(console.log);\n    }\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      user,\n      searchEntry\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      toggleModal: this.toggleModal,\n      user: user,\n      onRecipeSearch: this.onRecipeSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(MainPage, Object.assign({}, props, {\n        isSignedIn: isSignedIn,\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signin\",\n      render: props => /*#__PURE__*/React.createElement(SignIn, Object.assign({}, props, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      render: props => /*#__PURE__*/React.createElement(Register, Object.assign({}, props, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/recipe/:id\",\n      component: RecipePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/search\",\n      render: props => /*#__PURE__*/React.createElement(ResultsPage, Object.assign({}, props, {\n        searchEntry: searchEntry,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jackierauhut/Documents/recipe-share/src/App.js"],"names":["React","Component","MainPage","SignIn","Register","NavBar","RecipePage","BrowserRouter","Router","Switch","Route","ResultsPage","initialState","isSignedIn","user","id","name","email","recipes","searchEntry","filteredRecipes","App","constructor","loadUser","data","setState","_id","onRecipeSearch","search","onRouteChange","route","toggleModal","prevState","isProfileOpen","state","componentDidMount","token","window","sessionStorage","getItem","fetch","method","headers","Authorization","then","response","json","catch","console","log","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MainPage from \"./components/MainPage/MainPage\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport RecipePage from \"./components/RecipePage/RecipePage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport ResultsPage from \"./components/ResultsPage/ResultsPage\";\n\nconst initialState = {\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    recipes: \"\",\n  },\n  searchEntry: \"\",\n  filteredRecipes: [],\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem(\"token\");\n    if (token) {\n      fetch(\"http://localhost:3000/signin\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.user) {\n            fetch(\"http://localhost:3000/profile\", {\n              method: \"get\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: token,\n              },\n            })\n              .then((response) => response.json())\n              .then((user) => {\n                if (user && user.email) {\n                  this.loadUser(user);\n                  this.onRouteChange(\"mainPage\");\n                  this.setState({ isSignedIn: true });\n                }\n              });\n          }\n        })\n        .catch(console.log);\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data._id,\n        name: data.name,\n        email: data.email,\n        recipes: data.recipes,\n      },\n    });\n  };\n\n  onRecipeSearch = (search) => {\n    this.setState({ searchEntry: search });\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState({ isSignedIn: false });\n      this.setState({ initialState });\n    } else if (route === \"signingIn\") {\n      this.setState({ isSignedIn: true });\n    }\n  };\n\n  toggleModal = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      isProfileOpen: !prevState.isProfileOpen,\n    }));\n  };\n\n  render() {\n    const { isSignedIn, user, searchEntry } = this.state;\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar\n            isSignedIn={isSignedIn}\n            onRouteChange={this.onRouteChange}\n            toggleModal={this.toggleModal}\n            user={user}\n            onRecipeSearch={this.onRecipeSearch}\n          />\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={(props) => (\n                <MainPage {...props} isSignedIn={isSignedIn} user={user} />\n              )}\n            />\n            <Route\n              path=\"/signin\"\n              render={(props) => (\n                <SignIn\n                  {...props}\n                  onRouteChange={this.onRouteChange}\n                  loadUser={this.loadUser}\n                />\n              )}\n            />\n            <Route\n              path=\"/register\"\n              render={(props) => (\n                <Register\n                  {...props}\n                  onRouteChange={this.onRouteChange}\n                  loadUser={this.loadUser}\n                />\n              )}\n            />\n            <Route path=\"/recipe/:id\" component={RecipePage} />\n            <Route\n              path=\"/search\"\n              render={(props) => (\n                <ResultsPage {...props} searchEntry={searchEntry} />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}