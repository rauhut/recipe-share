{"ast":null,"code":"var _jsxFileName = \"/Users/jackierauhut/Documents/recipe_share/src/components/Register/Register.js\";\nimport React from \"react\";\nimport { Form, FormGroup, Label, Input, FormFeedback, Alert } from \"reactstrap\";\nimport \"./Register.css\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onNameChange = event => {\n      this.setState({\n        registerName: event.target.value\n      });\n      let isNameInvalid = false;\n\n      if (event.target.value.length === 0) {\n        isNameInvalid = true;\n      }\n\n      this.setState({\n        isNameInvalid\n      });\n    };\n\n    this.onEmailChange = event => {\n      this.setState({\n        registerEmail: event.target.value\n      });\n      let isEmailInvalid = false;\n\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(event.target.value)) {\n        isEmailInvalid = true;\n      }\n\n      this.setState({\n        isEmailInvalid\n      });\n    };\n\n    this.onPasswordChange = event => {\n      this.setState({\n        registerPassword: event.target.value\n      });\n      let isPasswordInvalid = false;\n\n      if (event.target.value.length === 0) {\n        isPasswordInvalid = true;\n      }\n\n      this.setState({\n        isPasswordInvalid\n      });\n    };\n\n    this.saveAuthTokenInSession = token => {\n      window.sessionStorage.setItem(\"token\", token);\n    };\n\n    this.onSubmitRegister = () => {\n      this.setState({\n        isLoading: true\n      });\n\n      if (this.state.registerName === \"\") {\n        this.setState({\n          isNameInvalid: true\n        });\n      }\n\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.state.registerEmail)) {\n        this.setState({\n          isEmailInvalid: true\n        });\n      }\n\n      if (this.state.registerPassword === \"\") {\n        this.setState({\n          isPasswordInvalid: true\n        });\n      }\n\n      fetch(\"http://localhost:3000/register\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.registerName,\n          email: this.state.registerEmail,\n          password: this.state.registerPassword\n        })\n      }).then(response => {\n        if (response) {\n          return response.json();\n        } else {\n          this.setState({\n            invalidLogin: true\n          });\n          throw new Error(\"Something went wrong when trying to register\");\n        }\n      }).then(data => {\n        if (data.success) {\n          if (data.token) {\n            this.saveAuthTokenInSession(data.token);\n            fetch(\"http://localhost:3000/profile\", {\n              method: \"get\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: data.token\n              }\n            }).then(response => response.json()).then(user => {\n              if (user && user.email) {\n                this.props.loadUser(user);\n                this.props.onRouteChange(\"signingIn\");\n                this.props.history.push(\"/\");\n              }\n            }).catch(console.log);\n          }\n        } else {\n          if (data.error) {\n            this.setState({\n              errorMsg: data.error\n            });\n          }\n\n          this.setState({\n            invalidLogin: true\n          });\n          this.setState({\n            isLoading: false\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.onEnter = e => {\n      if (e.which === 13) {\n        this.onSubmitRegister();\n      }\n    };\n\n    this.state = {\n      registerEmail: \"\",\n      isEmailInvalid: false,\n      errorMsg: \"Unable to register\",\n      registerPassword: \"\",\n      isPasswordInvalid: false,\n      registerName: \"\",\n      isNameInvalid: false,\n      isLoading: false,\n      invalidLogin: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-form\",\n      onKeyPress: this.onEnter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"name\",\n      name: \"name\",\n      id: \"name\",\n      onChange: this.onNameChange,\n      invalid: this.state.isNameInvalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Name must not be empty\")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email-address\",\n      id: \"email-address\",\n      onChange: this.onEmailChange,\n      invalid: this.state.isEmailInvalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \"Invalid email address\")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      onChange: this.onPasswordChange,\n      invalid: this.state.isPasswordInvalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \"Password must not be empty\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, this.state.invalidLogin && /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, this.state.errorMsg)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-secondary\",\n      onClick: this.onSubmitRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, !this.state.isLoading && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 39\n      }\n    }, \"Register\"), this.state.isLoading && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 38\n      }\n    }, \"Loading...\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-secondary\",\n      onClick: () => {\n        this.props.history.push(\"/\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, \"Back\")));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/jackierauhut/Documents/recipe_share/src/components/Register/Register.js"],"names":["React","Form","FormGroup","Label","Input","FormFeedback","Alert","Register","Component","constructor","props","onNameChange","event","setState","registerName","target","value","isNameInvalid","length","onEmailChange","registerEmail","isEmailInvalid","test","onPasswordChange","registerPassword","isPasswordInvalid","saveAuthTokenInSession","token","window","sessionStorage","setItem","onSubmitRegister","isLoading","state","fetch","method","headers","body","JSON","stringify","name","email","password","then","response","json","invalidLogin","Error","data","success","Authorization","user","loadUser","onRouteChange","history","push","catch","console","log","error","errorMsg","onEnter","e","which","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, FormGroup, Label, Input, FormFeedback, Alert } from \"reactstrap\";\nimport \"./Register.css\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registerEmail: \"\",\n      isEmailInvalid: false,\n      errorMsg: \"Unable to register\",\n      registerPassword: \"\",\n      isPasswordInvalid: false,\n      registerName: \"\",\n      isNameInvalid: false,\n      isLoading: false,\n      invalidLogin: false,\n    };\n  }\n\n  onNameChange = (event) => {\n    this.setState({ registerName: event.target.value });\n    let isNameInvalid = false;\n    if (event.target.value.length === 0) {\n      isNameInvalid = true;\n    }\n    this.setState({ isNameInvalid });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ registerEmail: event.target.value });\n    let isEmailInvalid = false;\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(event.target.value)) {\n      isEmailInvalid = true;\n    }\n    this.setState({ isEmailInvalid });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ registerPassword: event.target.value });\n    let isPasswordInvalid = false;\n    if (event.target.value.length === 0) {\n      isPasswordInvalid = true;\n    }\n    this.setState({ isPasswordInvalid });\n  };\n\n  saveAuthTokenInSession = (token) => {\n    window.sessionStorage.setItem(\"token\", token);\n  };\n\n  onSubmitRegister = () => {\n    this.setState({ isLoading: true });\n\n    if (this.state.registerName === \"\") {\n      this.setState({ isNameInvalid: true });\n    }\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.state.registerEmail)) {\n      this.setState({ isEmailInvalid: true });\n    }\n    if (this.state.registerPassword === \"\") {\n      this.setState({ isPasswordInvalid: true });\n    }\n\n    fetch(\"http://localhost:3000/register\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name: this.state.registerName,\n        email: this.state.registerEmail,\n        password: this.state.registerPassword,\n      }),\n    })\n      .then((response) => {\n        if (response) {\n          return response.json();\n        } else {\n          this.setState({ invalidLogin: true });\n          throw new Error(\"Something went wrong when trying to register\");\n        }\n      })\n      .then((data) => {\n        if (data.success) {\n          if (data.token) {\n            this.saveAuthTokenInSession(data.token);\n            fetch(\"http://localhost:3000/profile\", {\n              method: \"get\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: data.token,\n              },\n            })\n              .then((response) => response.json())\n              .then((user) => {\n                if (user && user.email) {\n                  this.props.loadUser(user);\n                  this.props.onRouteChange(\"signingIn\");\n                  this.props.history.push(\"/\");\n                }\n              })\n              .catch(console.log);\n          }\n        } else {\n          if (data.error) {\n            this.setState({ errorMsg: data.error });\n          }\n          this.setState({ invalidLogin: true });\n          this.setState({ isLoading: false });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  onEnter = (e) => {\n    if (e.which === 13) {\n      this.onSubmitRegister();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"register-form\" onKeyPress={this.onEnter}>\n        <h1>Register</h1>\n        <Form>\n          <FormGroup>\n            <Label>Name</Label>\n            <Input\n              type=\"name\"\n              name=\"name\"\n              id=\"name\"\n              onChange={this.onNameChange}\n              invalid={this.state.isNameInvalid}\n            ></Input>\n            <FormFeedback>Name must not be empty</FormFeedback>\n          </FormGroup>\n          <FormGroup>\n            <Label>Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email-address\"\n              id=\"email-address\"\n              onChange={this.onEmailChange}\n              invalid={this.state.isEmailInvalid}\n            ></Input>\n            <FormFeedback>Invalid email address</FormFeedback>\n          </FormGroup>\n          <FormGroup>\n            <Label>Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              onChange={this.onPasswordChange}\n              invalid={this.state.isPasswordInvalid}\n            ></Input>\n            <FormFeedback>Password must not be empty</FormFeedback>\n          </FormGroup>\n        </Form>\n        <div>\n          {this.state.invalidLogin && (\n            <Alert color=\"danger\">{this.state.errorMsg}</Alert>\n          )}\n        </div>\n        <div className=\"btn-container\">\n          <button className=\"button-secondary\" onClick={this.onSubmitRegister}>\n            {!this.state.isLoading && <span>Register</span>}\n            {this.state.isLoading && <span>Loading...</span>}\n          </button>\n          <button\n            className=\"button-secondary\"\n            onClick={() => {\n              this.props.history.push(\"/\");\n            }}\n          >\n            Back\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}